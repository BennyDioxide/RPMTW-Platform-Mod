repositories {
    mavenCentral()
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}
buildscript {
    repositories {
        mavenCentral()
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
configurations {
    embed
    compile.extendsFrom(embed)
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
group = 'siongsng.rpmtwupdatemod'
version = '1.0.4'
archivesBaseName = 'RPMTW-Update-Mod-Forge-1.16'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                rpmtwupdatemod {
                    source sourceSets.main
                }
            }
        }
    }
}
dependencies {
    implementation('net.sf.json-lib:json-lib:2.4:jdk15')
    implementation('commons-lang:commons-lang:2.6')
    implementation('net.sf.ezmorph:ezmorph:1.0.6')
    implementation('commons-collections:commons-collections:3.2.2')
    implementation('commons-beanutils:commons-beanutils:1.9.4')
    implementation('net.dv8tion:JDA:4.2.1_253')
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.4'
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "rpmtwupdatemod",
                "Specification-Vendor"    : "SiongSng",
                "LICENSE"                 : "MIT",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "SiongSng",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')
shadowJar {
    dependencies {
        include(dependency('net.sf.json-lib:json-lib:2.4:jdk15'))
        include(dependency('commons-lang:commons-lang:2.6'))
        include(dependency('net.sf.ezmorph:ezmorph:1.0.6'))
        include(dependency('commons-collections:commons-collections:3.2.2'))
        include(dependency('commons-beanutils:commons-beanutils:1.9.4'))
        include(dependency(('net.dv8tion:JDA:4.2.1_253')))
    }
    relocate('net.sf.json', 'siongsng.rpmtwupdatemod.sf.json')
    relocate('net.sf.ezmorph', 'siongsng.rpmtwupdatemod.sf.ezmorph')
    relocate('org.apache.commons.lang', 'siongsng.rpmtwupdatemod.commons.lang')
    relocate('org.apache.commons.collections', 'siongsng.rpmtwupdatemod.commons.collections')
    relocate('org.apache.commons.beanutils', 'siongsng.rpmtwupdatemod.commons.beanutils')
    relocate('net.dv8tion', 'siongsng.rpmtwupdatemod.net.dv8tion')
    classifier = ''
}
shadowJar.doLast {
    task ->
        ant.checksum file: task.archivePath
}

afterEvaluate {
    reobf {
        shadowJar {
            mappings = createMcpToSrg.output
        }
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}
build.dependsOn(shadowJar)