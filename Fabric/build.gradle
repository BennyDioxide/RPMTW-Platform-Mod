plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}
repositories {
    mavenCentral()
    maven { url "https://maven.shedaniel.me/" }
    maven {
        url "https://bai.jfrog.io/artifactory/maven" //ModMenu
        content {
            includeGroup "com.terraformersmc"
        }
    }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
        content {
            includeGroup "net.dv8tion"
        }
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven { url "https://maven.blamejared.com" } //Patchouli
    maven { url "https://repo1.maven.org/maven2/"}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "RPMTW-Update-Mod-Fabric-1.16"
version = project.mod_version as Object
group = project.maven_group as Object

configurations {
    shadow
    compile.extendsFrom(shadow)
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "vazkii.patchouli:Patchouli:1.16.4-52-FABRIC-SNAPSHOT" //Patchouli
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    shadow('commons-lang:commons-lang:2.6')
    shadow('net.sf.ezmorph:ezmorph:1.0.6')
    shadow('commons-collections:commons-collections:3.2.2')
    shadow('commons-beanutils:commons-beanutils:1.9.4')
    shadow('org.apache.httpcomponents:httpclient:4.5.13')
    include(modApi('io.socket:socket.io-client:2.0.1'))
    include(modApi('net.lingala.zip4j:zip4j:2.9.0'))
    include('io.socket:engine.io-client:2.0.0')
    include('org.json:json:20090211')
    include('com.squareup.okhttp3:okhttp:3.12.12')
    include('com.squareup.okio:okio:1.15.0')
    modImplementation include("me.shedaniel.cloth:cloth-config-fabric:4.11.19") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation include("io.github.cottonmc:LibGui:3.4.0+1.16.5")
    modImplementation("com.terraformersmc:modmenu:1.16.8")
}

processResources {
    inputs.property "version", project.version
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
    repositories {
    }
}
remapJar.doLast {
    task ->
        ant.checksum file: task.archivePath
}
