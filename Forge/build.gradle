buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'siongsng.rpmtwupdatemod'
version = '1.2.5+1'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

java {
    archivesBaseName = 'RPMTW-Update-Mod-Forge-1.16'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=rpmtw_update_mod.mixin.cfg.json"
            mods {
                rpmtwupdatemod {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "rpmtw_update_mod.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url 'https://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/public-releases/' }
    maven { url 'https://maven.blamejared.com' }
}

configurations {
    shade
    compile.extendsFrom(shade)
}

dependencies {
    shade implementation('commons-lang:commons-lang:2.6')
    shade implementation('net.sf.ezmorph:ezmorph:1.0.6')
    shade implementation('commons-collections:commons-collections:3.2.2')
    shade implementation('commons-beanutils:commons-beanutils:1.9.4')
    shade implementation('commons-io:commons-io:2.9.0')
    shade implementation('io.socket:socket.io-client:2.0.1')
    shade implementation('net.lingala.zip4j:zip4j:2.9.0')
    shade('io.socket:engine.io-client:2.0.0')
    shade implementation('org.json:json:20090211')
    shade implementation('com.squareup.okhttp3:okhttp:3.12.12')
    shade implementation('com.squareup.okio:okio:1.15.0')
    implementation fg.deobf("vazkii.patchouli:Patchouli:1.16.4-54-SNAPSHOT")
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.20'
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "rpmtwupdatemod",
                "Specification-Vendor"    : "SiongSng",
                "LICENSE"                 : "MIT",
                "Specification-Version"   : "1",
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "SiongSng",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "rpmtw_update_mod.mixin.cfg.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

shadowJar {
    configurations = [project.configurations.shade]
    relocate('gnu', 'siongsng.rpmtwupdatemod.gnu')
    classifier = ''
}
reobf {
    shadowJar {
        dependsOn tasks.createMcpToSrg
        mappings = tasks.createMcpToSrg.outputs.files.singleFile
    }
}
artifacts {
    archives tasks.shadowJar
}
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}
artifacts {
    archives deobfJar
}